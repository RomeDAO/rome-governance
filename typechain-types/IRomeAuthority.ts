/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IRomeAuthorityInterface extends utils.Interface {
  contractName: "IRomeAuthority";
  functions: {
    "governor()": FunctionFragment;
    "guardian()": FunctionFragment;
    "policy()": FunctionFragment;
    "vault()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(functionFragment: "guardian", values?: undefined): string;
  encodeFunctionData(functionFragment: "policy", values?: undefined): string;
  encodeFunctionData(functionFragment: "vault", values?: undefined): string;

  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "guardian", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "policy", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "vault", data: BytesLike): Result;

  events: {
    "GovernorPulled(address,address)": EventFragment;
    "GovernorPushed(address,address,bool)": EventFragment;
    "GuardianPulled(address,address)": EventFragment;
    "GuardianPushed(address,address,bool)": EventFragment;
    "PolicyPulled(address,address)": EventFragment;
    "PolicyPushed(address,address,bool)": EventFragment;
    "VaultPulled(address,address)": EventFragment;
    "VaultPushed(address,address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GovernorPulled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GovernorPushed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianPulled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianPushed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PolicyPulled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PolicyPushed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultPulled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultPushed"): EventFragment;
}

export type GovernorPulledEvent = TypedEvent<
  [string, string],
  { from: string; to: string }
>;

export type GovernorPulledEventFilter = TypedEventFilter<GovernorPulledEvent>;

export type GovernorPushedEvent = TypedEvent<
  [string, string, boolean],
  { from: string; to: string; _effectiveImmediately: boolean }
>;

export type GovernorPushedEventFilter = TypedEventFilter<GovernorPushedEvent>;

export type GuardianPulledEvent = TypedEvent<
  [string, string],
  { from: string; to: string }
>;

export type GuardianPulledEventFilter = TypedEventFilter<GuardianPulledEvent>;

export type GuardianPushedEvent = TypedEvent<
  [string, string, boolean],
  { from: string; to: string; _effectiveImmediately: boolean }
>;

export type GuardianPushedEventFilter = TypedEventFilter<GuardianPushedEvent>;

export type PolicyPulledEvent = TypedEvent<
  [string, string],
  { from: string; to: string }
>;

export type PolicyPulledEventFilter = TypedEventFilter<PolicyPulledEvent>;

export type PolicyPushedEvent = TypedEvent<
  [string, string, boolean],
  { from: string; to: string; _effectiveImmediately: boolean }
>;

export type PolicyPushedEventFilter = TypedEventFilter<PolicyPushedEvent>;

export type VaultPulledEvent = TypedEvent<
  [string, string],
  { from: string; to: string }
>;

export type VaultPulledEventFilter = TypedEventFilter<VaultPulledEvent>;

export type VaultPushedEvent = TypedEvent<
  [string, string, boolean],
  { from: string; to: string; _effectiveImmediately: boolean }
>;

export type VaultPushedEventFilter = TypedEventFilter<VaultPushedEvent>;

export interface IRomeAuthority extends BaseContract {
  contractName: "IRomeAuthority";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IRomeAuthorityInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    governor(overrides?: CallOverrides): Promise<[string]>;

    guardian(overrides?: CallOverrides): Promise<[string]>;

    policy(overrides?: CallOverrides): Promise<[string]>;

    vault(overrides?: CallOverrides): Promise<[string]>;
  };

  governor(overrides?: CallOverrides): Promise<string>;

  guardian(overrides?: CallOverrides): Promise<string>;

  policy(overrides?: CallOverrides): Promise<string>;

  vault(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    governor(overrides?: CallOverrides): Promise<string>;

    guardian(overrides?: CallOverrides): Promise<string>;

    policy(overrides?: CallOverrides): Promise<string>;

    vault(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "GovernorPulled(address,address)"(
      from?: string | null,
      to?: string | null
    ): GovernorPulledEventFilter;
    GovernorPulled(
      from?: string | null,
      to?: string | null
    ): GovernorPulledEventFilter;

    "GovernorPushed(address,address,bool)"(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): GovernorPushedEventFilter;
    GovernorPushed(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): GovernorPushedEventFilter;

    "GuardianPulled(address,address)"(
      from?: string | null,
      to?: string | null
    ): GuardianPulledEventFilter;
    GuardianPulled(
      from?: string | null,
      to?: string | null
    ): GuardianPulledEventFilter;

    "GuardianPushed(address,address,bool)"(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): GuardianPushedEventFilter;
    GuardianPushed(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): GuardianPushedEventFilter;

    "PolicyPulled(address,address)"(
      from?: string | null,
      to?: string | null
    ): PolicyPulledEventFilter;
    PolicyPulled(
      from?: string | null,
      to?: string | null
    ): PolicyPulledEventFilter;

    "PolicyPushed(address,address,bool)"(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): PolicyPushedEventFilter;
    PolicyPushed(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): PolicyPushedEventFilter;

    "VaultPulled(address,address)"(
      from?: string | null,
      to?: string | null
    ): VaultPulledEventFilter;
    VaultPulled(
      from?: string | null,
      to?: string | null
    ): VaultPulledEventFilter;

    "VaultPushed(address,address,bool)"(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): VaultPushedEventFilter;
    VaultPushed(
      from?: string | null,
      to?: string | null,
      _effectiveImmediately?: null
    ): VaultPushedEventFilter;
  };

  estimateGas: {
    governor(overrides?: CallOverrides): Promise<BigNumber>;

    guardian(overrides?: CallOverrides): Promise<BigNumber>;

    policy(overrides?: CallOverrides): Promise<BigNumber>;

    vault(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    governor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    guardian(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    policy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    vault(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
